(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{391:function(t,a,e){"use strict";e.r(a);var s=e(7),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vim"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vim","aria-label":"Anchor"}},[t._v("#")]),t._v(" Vim")]),t._v(" "),e("h2",{attrs:{id:"modes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modes","aria-label":"Anchor"}},[t._v("#")]),t._v(" Modes")]),t._v(" "),e("p",[t._v("modes: "),e("code",[t._v("[normal, insert, commend, visual]")])]),t._v(" "),e("ul",[e("li",[t._v("insert -> normal = ESC")]),t._v(" "),e("li",[t._v("insert -> commend = ESC :")]),t._v(" "),e("li",[t._v("insert -> visual = ESC v")]),t._v(" "),e("li",[t._v("normal -> insert = iI aA cC oO")]),t._v(" "),e("li",[t._v("commend -> normal = ENTER")])]),t._v(" "),e("h1",{attrs:{id:"joy-of-painting-1-with-bob-ross-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#joy-of-painting-1-with-bob-ross-2","aria-label":"Anchor"}},[t._v("#")]),t._v(" Joy of Painting[1] with Bob Ross[2]")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("[1] - Vim\n[2] - Shawn Biddle\n")])])]),e("h2",{attrs:{id:"modality"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modality","aria-label":"Anchor"}},[t._v("#")]),t._v(" Modality")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("Insert  - Brush is on the canvas\nNormal  - Brush is off the canvas\nCommand - Mixing your pallette\n")])])]),e("h2",{attrs:{id:"starting-vim"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#starting-vim","aria-label":"Anchor"}},[t._v("#")]),t._v(" Starting Vim")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("vim <file>\nvim, :e <file>\n")])])]),e("h2",{attrs:{id:"pen-to-the-page"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pen-to-the-page","aria-label":"Anchor"}},[t._v("#")]),t._v(" Pen to the page")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("i - Enter insert mode at cursor\nI - Enter insert mode at first non-blank character\ns - Delete character under cursor and enter insert mode\nS - Delete line and begin insert at beginning of same line\na - Enter insert mode _after_ cursor\nA - Enter insert mode at the end of the line\no - Enter insert mode on the next line\nO - enter insert mode on the above line\nC - Delete from cursor to end of line and begin insert\n\nThis is a test sentence\n")])])]),e("p",[t._v("(Next class will cover 'c')")]),t._v(" "),e("h2",{attrs:{id:"picking-up-the-brush"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#picking-up-the-brush","aria-label":"Anchor"}},[t._v("#")]),t._v(" Picking up the brush")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("ESC\nCtrl+[\n")])])]),e("h2",{attrs:{id:"scanning-the-canvas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scanning-the-canvas","aria-label":"Anchor"}},[t._v("#")]),t._v(" Scanning the canvas")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("    k\n    ^\nh <   > l\n    v\n    j\n")])])]),e("p",[t._v("yy - Copies a line")]),t._v(" "),e("p",[t._v("yw - Copies a word")]),t._v(" "),e("p",[t._v("y$ - Copies from where your cursor is to the end of a line")]),t._v(" "),e("p",[t._v("v - Highlight one character at a time using arrow buttons or the h, k, j, l buttons")]),t._v(" "),e("p",[t._v("V - Highlights one line, and movement keys can allow you to highlight additional lines")]),t._v(" "),e("p",[t._v("p - Paste whatever has been copied to the unnamed register")]),t._v(" "),e("p",[t._v("d - Deletes highlighted text")]),t._v(" "),e("p",[t._v("dd - Deletes a line of text")]),t._v(" "),e("p",[t._v("dw - Deletes a word")]),t._v(" "),e("p",[t._v("D - Deletes everything from where your cursor is to the end of the line")]),t._v(" "),e("p",[t._v("d0 - Deletes everything from where your cursor is to the beginning of the line")]),t._v(" "),e("p",[t._v("dgg - Deletes everything from where your cursor is to the beginning of the file")]),t._v(" "),e("p",[t._v("dG - Deletes everything from where your cursor is to the end of the file")]),t._v(" "),e("p",[t._v("x - Deletes a single character")]),t._v(" "),e("p",[t._v("u - Undo the last operation; u# allows you to undo multiple actions")]),t._v(" "),e("p",[t._v("Ctrl + r - Redo the last undo")]),t._v(" "),e("p",[t._v(". - Repeats the last action")]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Vim commands")])]),t._v(" "),e("h2",{attrs:{id:"getting-from-a-to-b-motions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-from-a-to-b-motions","aria-label":"Anchor"}},[t._v("#")]),t._v(" Getting from a to b: Motions")]),t._v(" "),e("p",[t._v("Basics: wWbBeE")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("w - Forward to the beginning of next word\nW - Forward to the beginning of the next WORD\nb - Backward to the next beginning of a word\nB - Backward to the next beginning of a WORD\ne - Forward to the next end of word\nE - Forward to the next end of WORD\n")])])]),e("p",[t._v("Slightly less basic: fFtT\nAll follow "),e("code",[t._v("[(n)um]<verb><n(o)un>")]),t._v(" syntax")]),t._v(" "),e("div",{staticClass:"language-vim extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vim"}},[e("code",[t._v("\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("n")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("f")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("o")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Forward until "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("o")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Inclusive"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("n")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("F"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("o")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Backward until "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("o")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Inclusive"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("n")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("t")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("o")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Forward until "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("o")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Exclusive"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("n")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("T"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("o")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Backward until "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("o")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Exclusive"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tabcdefg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" abcdefg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" abcdefg\n")])])]),e("h2",{attrs:{id:"searching"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#searching","aria-label":"Anchor"}},[t._v("#")]),t._v(" Searching")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('/  - Forward  turn off highlight ":nohl" : (no highlight)\n?  - Backward\n*  - Word under cursor - forward  (bounded)\ng* - Word under cursor - forward  (unbounded)\n#  - Word under cursor - backward (bounded)\ng# - Word under cursor - backward (unbounded)\nn  - Next result, forward\nN  - Next result, backward\n')])])]),e("p",[t._v("(Note here to explain what bounded/unbounded mean)")]),t._v(" "),e("h2",{attrs:{id:"copy-paste"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#copy-paste","aria-label":"Anchor"}},[t._v("#")]),t._v(" Copy/Paste")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("y - Yank. Example: yw (yank word)\np - paste after cursor\nP - paste before cursor\n\ngg - go to the beginning of the file\nG - go to the end\n\nggvG  - select all\n")])])]),e("h1",{attrs:{id:"vim-set-syn-mkd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vim-set-syn-mkd","aria-label":"Anchor"}},[t._v("#")]),t._v(" vim: set syn=mkd :")]),t._v(" "),e("h2",{attrs:{id:"huckleberry-vim"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#huckleberry-vim","aria-label":"Anchor"}},[t._v("#")]),t._v(" Huckleberry Vim")]),t._v(" "),e("div",{staticClass:"language-vim extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vim"}},[e("code",[t._v("\tOverview of class one"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\tMoving"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NORM"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" hjklwbefFtT\n\tInserting"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NORM"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" aAsSoOiIC\n\tWriting"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NORM"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("w")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("file")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\tQuitting"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NORM"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("q")]),t._v("\n\tSearching"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("g"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("#"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("g#"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nN\n\tCopy"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Paste"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yYpP\n")])])]),e("h2",{attrs:{id:"understanding-the-argument-noun-verb-relationship"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#understanding-the-argument-noun-verb-relationship","aria-label":"Anchor"}},[t._v("#")]),t._v(" Understanding the Argument/Noun/Verb Relationship")]),t._v(" "),e("p",[t._v("Editing commands generally follow the structure of:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("[register][num/range]<verb><noun|(i|a)<text object>>\n")])])]),e("p",[t._v("Example #1:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\t3dw - delete 3 words\n\t3 d w\n\t| | ` word ---.\n\t| ` delete     } 3 words\n\t` 3 ----------/\n")])])]),e("p",[t._v("Example #2: (More detail later)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\tci(\n\tc i (\n\t| | ` Parenthesis text-object\n\t| ` Inside text-object\n\t` change\n")])])]),e("p",[t._v("Arguments = Ranges\nNouns = Motions/Text Objects\nVerbs = Commands")]),t._v(" "),e("h2",{attrs:{id:"common-edit-commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#common-edit-commands","aria-label":"Anchor"}},[t._v("#")]),t._v(" Common Edit commands")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\td - Delete: [range]d<motion>\n\t\tdd  - delete current line\n\t\tdj  - delete current and next line (j = down)\n\t\t2dj - delete current and 2 lines downward\n\n\tc - Change (Same as d but put me in insert mode)\n\t\tcw - change word\n\t\tcc = S - Delete current line and enter insert mode\n\t\t2cw - Delete 2 words and enter insert mode\n\n\t~  - Toggle the case of character under cursor\n\tg~ - Toggle case of [motion]\n\t\tg~w - Toggle case of cursor -> end of word\n\t\t\ttr|ue -> g~w -> trUE\n\t\tg~iw - Toggle case of entire word under cursor\n\t\t\ttr|ue -> g~iw -> TRUE\n\n\tp - Paste\n")])])]),e("h2",{attrs:{id:"registers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#registers","aria-label":"Anchor"}},[t._v("#")]),t._v(" Registers")]),t._v(" "),e("p",[t._v("Accessing:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('"<reg>\n')])])]),e("p",[t._v("Example:\n\"ayy - Yank current line into 'a' register\n\"ap - Paste 'a' register")]),t._v(" "),e("p",[e("code",[t._v("<C-r><reg> - Paste contents of <reg>")]),t._v("\nExample:\n"),e("code",[t._v('[INS] Hello [ESC] byw [INS]<C-r>" -> HelloHello')])]),t._v(" "),e("p",[t._v("Listing:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v(":reg\n")])])]),e("h2",{attrs:{id:"special-registers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#special-registers","aria-label":"Anchor"}},[t._v("#")]),t._v(" Special registers:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('" - Noname buffer - Last dcsxy\n_ - Blackhole buffer\n% - Filename\n/ - Last search\n: - Last command\n. - Last edit\n')])])]),e("h2",{attrs:{id:"register-assignment-commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#register-assignment-commands","aria-label":"Anchor"}},[t._v("#")]),t._v(" Register assignment commands")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\ty - Yank\n\tq - Macros (much later)\n\tm - Marks  (a little later)\n\t(Any command that edits will assign to the "" [noname buffer])\n')])])]),e("h2",{attrs:{id:"advanced-motions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#advanced-motions","aria-label":"Anchor"}},[t._v("#")]),t._v(" Advanced motions")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('() - Sentences  (". " delimited words)\n{} - Paragraphs (Next empty line)\n\n\tExample:\n\t\td} - Delete until next paragraph (useful for deleting unnecessary conditional blocks)\n\n\t\tif (something)\n\t\t{\n\t\t\ttest\n\t\t}\n')])])]),e("p",[t._v("; - Repeat last motion forward")]),t._v(" "),e("p",[t._v(", - Repeat last motion backward\n"),e("code",[t._v("g<hjkl>")]),t._v(" - Go down a "),e("em",[t._v("visual")]),t._v(" line\nThis is some text that's going to wrap so I have to fill in a lot of words. I can never think of things to type here because I'm not a creative person but this will demonstrate visual versus hardbroken lines.\nThis is a second line")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("<#>G - Go to Line #\ngg   - Go to the top of the file\n\n]] - Next section (Depending on your current filetype this may move between functions)\n[[ - Previous section (see above note)\n0 - Front of line\n^ - Front of line (first non-blank)\n% - Matching brace/bracket/paren/tag(with matchtag plugin, see session 3)\n$ - End of line\n")])])]),e("h1",{attrs:{id:"text-objects"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#text-objects","aria-label":"Anchor"}},[t._v("#")]),t._v(" Text objects")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("{}[]()w<>t'\"`\n\ni vs a:\n\ti = Inside\n\t\tExample:\n\t\t\tself.test[obj|ect] -> ci[ -> self.test[|]\n\n\ta = Around\n\t\tExample:\n\t\t\tself.test[obj|ect] -> ca[ -> self.test|\n")])])]),e("h1",{attrs:{id:"misc-commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#misc-commands","aria-label":"Anchor"}},[t._v("#")]),t._v(" Misc. commands")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("[count](<|>) - Indent count\tlines\n\tExample:\n\t\t3>\n")])])]),e("p",[t._v("1")]),t._v(" "),e("p",[t._v("2")]),t._v(" "),e("p",[t._v("3")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("<range>[count](<|>) - Indent given range count times\n")])])]),e("p",[t._v("1")]),t._v(" "),e("p",[t._v("2")]),t._v(" "),e("p",[t._v("3")]),t._v(" "),e("p",[t._v("4")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("u - Undo (See :help undo, it's complicated)\nC-r - Redo\n. - Redo last change\nzz - Center screen\nZZ - Write and quit. Only write if file has changed (preserves last mod time)\n")])])]),e("p",[t._v("Managing multiple files at once")]),t._v(" "),e("div",{staticClass:"language-vim extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vim"}},[e("code",[t._v("\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tabnew")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("file")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("       "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Open a "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tab")]),t._v(" with given "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("file")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("or empty "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("file")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tgt or "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tabn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ext"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tab")]),t._v("\n\tgT or "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tabp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("revious"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Previous "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tab")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tabm")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ove"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" # "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Move current "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tab")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" position # "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zero"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("indexed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" no "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("argument")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" end\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tabc")]),t._v("        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Close current "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tab")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tabo")]),t._v("        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Close "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),t._v(" other "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tabs")]),t._v(" except current\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);